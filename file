int recorrer(char *msg,int indice){
	int cont=0;
	while(!(msg[indice] & 0x80)){
		msg[indice]<<= 1;
		cont++;
	}
	return cont;
}


char agregar(char m,char s,int n){
	return (m | (s >> n));
}

char recorrern(char *msg,int indice,int n){
	msg[indice]<<= n;
}


	//unsigned char pol[2]={0x01,0x03};
	/*
	unsigned char pol[8]={0x04,0x0C,0x01,0x01,0x01,0x0D,0x0B,0x07};
	unsigned char msg[4]="hola";
	
	res= 0x05^0x0b;	msg[0]<<= 1;	printf("%.1X \n",res);	if (msg[0] & 0x08)

	mensaje = 11	0101	1011
	pol= 		 10	011
	*/
	/*
	pol[0]=(pol[0] << 3)| (pol[1] >> 1);
	res=msg[0]^pol[0];
	res<<= 1;
	res=(res |(pol[1]>> 2) ^ (msg[1] >> 2));
*/


int recorrer(char *msg,int indice){
	int cont=0;
	while(!(msg[indice] & 0x80)){
		msg[indice]<<= 1;
		cont++;
	}
	return cont;
}


char agregar(char m,char s,int n){
	return (m | (s >> n));
}

char recorrern(char *msg,int indice,int n){
	msg[indice]<<= n;
}



int i;
	unsigned char aux[5];
	for(i=0; i<5 ; i++){
		res[i]=msg[i]^pol[i];
	}
	
	for(i=0; i<5 ; i++){
		recorrern(res,i,5);
		aux[i]=agregar(res[i],res[i+1],3);
		if(i== 4){
		aux[i]=res[i] | msg[5]>>3;	
		}
		printf("%.1X  \n",aux[i]);
	}
	
	for(i=0; i<5 ; i++){
		res[i]=aux[i]^pol[i];
		printf("%.1X  \n",res[i]);
	}